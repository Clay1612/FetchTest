{"version":3,"sources":["index.js"],"names":["requestURL","layoutRow","document","querySelector","viewMoreButton","rememberCount","counter","sendGetRequest","url","fetch","then","response","json","data","addElements","createCard","card","content","cloneNode","titleContent","cardContent","innerHTML","title","body","setAttribute","count","fragment","DocumentFragment","i","append","addEventListener"],"mappings":"AAAA,a,CAEA;;AACA,IAAMA,UAAU,GAAG,4CAAnB,C,CAEA;;AACA,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAhB;AACA,IAAIC,cAAc,GAAGF,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAArB;AACA,IAAIE,aAAa,GAAG,CAApB;AACA,IAAIC,OAAO,GAAG,CAAd,C,CAEA;;AACA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,SAAOC,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACC,UAAAC,QAAQ,EAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHI,CAAP;AAID,C,CAED;AACA;;;AAEAL,cAAc,CAACP,UAAD,CAAd,CACGU,IADH,CACQ,UAAAG,IAAI,EAAI;AACZC,EAAAA,WAAW,CAACD,IAAD,EAAO,CAAP,CAAX;AACD,CAHH,E,CAKA;;AACA,SAASE,UAAT,CAAoBF,IAApB,EAA0B;AACxB,MAAMG,IAAI,GAAGd,QAAQ,CAACC,aAAT,CAAuB,UAAvB,EAAmCc,OAAnC,CAA2Cd,aAA3C,CAAyD,aAAzD,EAAwEe,SAAxE,CAAkF,IAAlF,CAAb;AACA,MAAMC,YAAY,GAAGH,IAAI,CAACb,aAAL,CAAmB,aAAnB,CAArB;AACA,MAAMiB,WAAW,GAAGJ,IAAI,CAACb,aAAL,CAAmB,YAAnB,CAApB;;AACA,MAAI;AACFgB,IAAAA,YAAY,CAACE,SAAb,GAAyBR,IAAI,CAACS,KAA9B;AACAF,IAAAA,WAAW,CAACC,SAAZ,GAAwBR,IAAI,CAACU,IAA7B;AAEA,WAAOP,IAAP;AACD,GALD,CAMA,gBAAM;AACJZ,IAAAA,cAAc,CAACoB,YAAf,CAA4B,UAA5B,EAAwC,UAAxC,EADI,CAEJ;AACA;AACA;AACA;AACA;AACD;AACF;;AAED,SAASV,WAAT,CAAqBD,IAArB,EAA2BY,KAA3B,EAAkC;AAChC,MAAIC,QAAQ,GAAG,IAAIC,gBAAJ,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAGvB,aAAb,EAA4BuB,CAAC,GAAGtB,OAAhC,EAAyCsB,CAAC,EAA1C,EAA8C;AAC5CF,IAAAA,QAAQ,CAACG,MAAT,CAAgBd,UAAU,CAACF,IAAI,CAACe,CAAD,CAAL,CAA1B;AACD;;AAED3B,EAAAA,SAAS,CAAC4B,MAAV,CAAiBH,QAAjB;AAEArB,EAAAA,aAAa,IAAIoB,KAAjB;AACAnB,EAAAA,OAAO,IAAGmB,KAAV;AACD,C,CAED;;;AACArB,cAAc,CAAC0B,gBAAf,CAAgC,OAAhC,EAAyC;AAAA,SAAMvB,cAAc,CAACP,UAAD,CAAd,CAC9CU,IAD8C,CACzC,UAAAG,IAAI,EAAI;AACZC,IAAAA,WAAW,CAACD,IAAD,EAAO,CAAP,CAAX;AACD,GAH8C,CAAN;AAAA,CAAzC","sourcesContent":["'use strict'\n\n//Request URL\nconst requestURL = 'https://jsonplaceholder.typicode.com/posts';\n\n//Variables\nlet layoutRow = document.querySelector('.row');\nlet viewMoreButton = document.querySelector('.btn-secondary');\nlet rememberCount = 0;\nlet counter = 6;\n\n//GET\nfunction sendGetRequest(url) {\n  return fetch(url)\n    .then(response => {\n      return response.json()\n    })\n}\n\n//Requests\n//GET\n\nsendGetRequest(requestURL)\n  .then(data => {\n    addElements(data, 6)\n  })\n\n//Template functions\nfunction createCard(data) {\n  const card = document.querySelector('template').content.querySelector('.js-my-card').cloneNode(true);\n  const titleContent = card.querySelector('.card-title');\n  const cardContent = card.querySelector('.card-text');\n  try {\n    titleContent.innerHTML = data.title;\n    cardContent.innerHTML = data.body;\n\n    return card;\n  }\n  catch {\n    viewMoreButton.setAttribute('disabled', 'disabled');\n    // if(data.title === undefined) {\n    //   titleContent.innerHTML = '';\n    //   cardContent.innerHTML = '';\n    // }                                   \n    // Вариант где последние 4 карты не покажутся, зато не будет underfined текста\n  }\n}\n\nfunction addElements(data, count) {\n  let fragment = new DocumentFragment();\n\n  for (let i = rememberCount; i < counter; i++) {\n    fragment.append(createCard(data[i]));\n  }\n\n  layoutRow.append(fragment);\n\n  rememberCount += count;\n  counter +=count;\n}\n\n//Event Listener on button\nviewMoreButton.addEventListener('click', () => sendGetRequest(requestURL)\n.then(data => {\n  addElements(data, 6)\n}));\n"],"file":"index.js"}